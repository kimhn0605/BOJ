[ 문제 1764 ]

* 새로운 비어있는 집합 (set) 객체 생성
  ex) s = set()

* 집합 (set) 메서드
  - set.add(값) : 요소 추가 -> 중복값 넣으면 무시 
  - set.update(값) : 요소 여러 개 추가 -> [] 또는 {} 로 감싸서 값 추가 
  - set.remove(값) : 요소 제거 -> 지우려는 요소 없으면 KeyError 발생
  - set.discard(값) : 요소 제거 -> 지우려는 요소가 없어도 에러 없이 정상 종료
  - set.pop() : 맨 앞에 있는 요소 반환 후 제거 -> 빈 상태에서 호출하면 에러 발생
  - set.clear() : 모든 요소 제거 
  - set in : 내부에 요소 있는지 확인

* set 합집합 : | 또는 union 함수
  set 교집합 : & 또는 intersection 함수
  set 차집합 : - 또는 difference 함수

[ 문제 1032 ]

* 가장 긴 문자열 찾기
  - max(list, key = len)

* join() 메서드
 - "".join(리스트) : 리스트를 하나의 문자열로 합쳐서 반환
   ex) ''.join(['a', 'b', 'c']) => 'abc'
  
 - "구분자".join(리스트) : 리스트의 값과 값 사이에 구분자를 끼워넣고 하나의 문자열로 합쳐서 반환
   ex) '_'.join(['a', 'b', 'c']) => 'a_b_c'

[ 문제 10809 ]

* 문자 -> 아스키코드
 - chr() 함수 이용 
  ex) chr(65) : A, chr(97) : a

* 아스키코드 -> 문자
 - ord() 함수 이용
  ex) ord("A") : 65, ord("a") : 97

* index() 메서드
 - list.index(값) : 리스트에서 해당 값의 인덱스 반환 (중복 시 가장 작은 인덱스 반환)
 
[ 문제 1302 ]

* 이차원 리스트 in 연산자 사용
 - 내부 리스트 하나씩 순회하면서 인덱스 활용

 ex) list = [['a', 'b'], ['c', 'd']]
     for li in list :
        if 'a' in li[0] :
          print("포함")
        else :
          print("미포함")

[ 문제 9093 ]
 
* reverse() 메서드 
 - 리스트에서 제공하는 함수
 - list 로 변환 후 list.reverse() 사용

* reversed() 메서드 
 - 리스트에서 제공하는 함수 x
 - reversed object 을 반환하므로 join 함수 이용해서 문자열 반환
  
* join() 메서드 
 - 리스트와 튜플 모두 문자열로 생성 가능
  ex) li = ['a', 'b', 'c]
      ''.join(li)     # abc

[ 문제 11536 ]

* 프로그램 종료
 - quit() 
 - exit() 
 - sys.exit() 
 - os.exit()

[ 문제 1969 ]

* 빈도수 높은 값 찾기
 - max(data, key = data.count)
 - from collection import Counter 라이브러리 사용